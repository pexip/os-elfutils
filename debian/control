Source: elfutils
Priority: optional
Maintainer: Pexip AS <packaging@pexip.com>
XSBC-Pexip-Original-Maintainer: Debian Elfutils Maintainers <debian-gcc@lists.debian.org>
XSBC-Pexip-Original-Uploaders: Kurt Roeckx <kurt@roeckx.be>,
  Matthias Klose <doko@debian.org>,
  Sergio Durigan Junior <sergiodj@debian.org>,
Build-Depends: debhelper (>= 11),
  autoconf, automake, lsb-release,
  bzip2, zlib1g-dev, zlib1g-dev:native, libbz2-dev, liblzma-dev,
  m4, gettext, po-debconf,
  gawk, dpkg-dev (>= 1.16.1~),
  gcc-multilib [any-amd64 sparc64] <!nocheck>,
  libc6-dbg [powerpc powerpcspe ppc64 ppc64el armel armhf arm64 sparc64 riscv64],
  flex, bison,
  pkg-config,
  libarchive-dev <!pkg.elfutils.nodebuginfod>,
  libmicrohttpd-dev <!pkg.elfutils.nodebuginfod>, libcurl4-openssl-dev <!pkg.elfutils.nodebuginfod>, libsqlite3-dev <!pkg.elfutils.nodebuginfod>,
Build-Conflicts: autoconf2.13
Standards-Version: 4.5.1
Section: libs
Homepage: https://sourceware.org/elfutils/
Vcs-Browser: https://salsa.debian.org/toolchain-team/elfutils
Vcs-Git: https://salsa.debian.org/toolchain-team/elfutils.git
XS-Pexip-Upstream: http://deb.debian.org/debian/ bookworm

Package: elfutils
Section: utils
Architecture: any
Multi-Arch: foreign
Depends: ${shlibs:Depends}, ${misc:Depends},
  libelf1 (= ${binary:Version}), libdw1 (= ${binary:Version})
Description: collection of utilities to handle ELF objects
 Elfutils is a collection of utilities, including eu-ld (a linker),
 eu-nm (for listing symbols from object files), eu-size (for listing the
 section sizes of an object or archive file), eu-strip (for discarding
 symbols), eu-readelf (to see the raw ELF file structures), and eu-elflint
 (to check for well-formed ELF files).

Package: libelf1
Architecture: any
Multi-Arch: same
Depends: ${shlibs:Depends}, ${misc:Depends}
Pre-Depends: ${misc:Pre-Depends}
Description: library to read and write ELF files
 The libelf1 package provides a shared library which allows reading and
 writing ELF files on a high level.  Third party programs depend on
 this package to read internals of ELF files.  The programs of the
 elfutils package use it also to generate new ELF files.
 .
 This library is part of elfutils.

Package: libelf-dev
Section: libdevel
Architecture: any
Multi-Arch: same
Depends: libelf1 (= ${binary:Version}), ${misc:Depends}, zlib1g-dev
Conflicts: libelfg0-dev
Description: libelf1 development libraries and header files
 libelf1 provides a shared library which allows reading and writing of ELF
 files on a high level.
 .
 This package contains development libraries and header files for libelf1.

Package: libdw-dev
Section: libdevel
Architecture: any
Multi-Arch: same
Depends: libelf-dev, libdw1 (= ${binary:Version}), ${misc:Depends},
  zlib1g-dev, liblzma-dev
Description: libdw1 development libraries and header files
 libdw1 provides a library that provides access to DWARF debug information
 stored inside ELF files.
 .
 This package contains development libraries and header files for libdw1.
 .
 It also contains a static version of libdw.  Only link to the static version
 for special cases and when you don't need anything from the ebl backends.

Package: libdw1
Architecture: any
Multi-Arch: same
Depends: ${shlibs:Depends}, libelf1 (= ${binary:Version}), ${misc:Depends}
Pre-Depends: ${misc:Pre-Depends}
Description: library that provides access to the DWARF debug information
 libdw1 provides a library that provides access to DWARF debug information
 stored inside ELF files.
 .
 This library is part of elfutils.

Package: libasm1
Architecture: any
Multi-Arch: same
Depends: ${shlibs:Depends}, ${misc:Depends},
  libelf1 (= ${binary:Version}), libdw1 (= ${binary:Version})
Pre-Depends: ${misc:Pre-Depends}
Description: library with a programmable assembler interface
 The libasm1 package provides a library with a programmable assembler
 interface.  It allows you to create ELF files on a low level.
 .
 This library is part of elfutils.

Package: libasm-dev
Section: libdevel
Architecture: any
Multi-Arch: same
Depends: libasm1 (= ${binary:Version}), libelf-dev, ${misc:Depends}
Conflicts: libelfsh0-dev, libasm0-dev
Description: libasm development libraries and header files
 libasm1 allows you to create ELF files on a low level.
 .
 This package contains development libraries and header files for libasm1.

Package: libdebuginfod1
Build-Profiles: <!pkg.elfutils.nodebuginfod>
Architecture: any
Multi-Arch: same
Depends: ${shlibs:Depends}, ${misc:Depends},
  libelf1 (= ${binary:Version}), libdw1 (= ${binary:Version}),
  libdebuginfod-common (>= ${source:Version})
Pre-Depends: ${misc:Pre-Depends}
Description: library to interact with debuginfod (development files)
 The libdebuginfo1 package provides a library with an interface to interact
 with debuginfod.
 .
 This library is part of elfutils.

Package: libdebuginfod-dev
Build-Profiles: <!pkg.elfutils.nodebuginfod>
Section: libdevel
Architecture: any
Multi-Arch: same
Depends: libdebuginfod1 (= ${binary:Version}), ${misc:Depends}, libelf-dev,
Description: libdebuginfod development libraries and header files
 libasm1 allows you to interact with debuginfod.
 .
 This package contains development libraries and header files for
 libdebuginfod1.

Package: debuginfod
Build-Profiles: <!pkg.elfutils.nodebuginfod>
Section: devel
Architecture: any
Depends: libdebuginfod1 (= ${binary:Version}), ${shlibs:Depends}, ${misc:Depends}
Description: debuginfo-related http file-server daemon
 Server, client tool and library to index and fetch ELF/DWARF files
 addressed by build-id through HTTP.

Package: libdebuginfod-common
Build-Profiles: <!pkg.elfutils.nodebuginfod>
Section: devel
Architecture: all
Multi-Arch: foreign
Depends: ${misc:Depends}, ucf
Pre-Depends: ${misc:Pre-Depends}, debconf
Description: configuration to enable the Debian debug info server
 This package asks if it should enable use of the Debian debug info
 server with debugging tools that use libdebuginfo such as GDB.
 .
 When this is allowed by the sysadmin, a snippet will be added to the
 shell configuration. You will need to restart your shell after
 installing this package before the snippet will work.
 .
 The Debian debug info server will be contacted every time debugging
 tools attempt to look up debug info for binaries or libraries but the
 server does not log requests for debug info.
 .
 The Debian debug info server uses https to securely transfer debugging
 files but does not offer OpenPGP signing of debug info.
